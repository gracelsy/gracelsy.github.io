<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>下一站与你</title>
  
  <subtitle>小小粉刷匠</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-05-22T08:34:10.510Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>小小粉刷匠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何优雅的白嫖CloudFlare之搭建Docker镜像加速服务</title>
    <link href="http://example.com/posts/efb26951.html"/>
    <id>http://example.com/posts/efb26951.html</id>
    <published>2025-05-22T08:30:00.000Z</published>
    <updated>2025-05-22T08:34:10.510Z</updated>
    
    <content type="html"><![CDATA[<hr><p><a href="https://www.cloudflare-cn.com/enterprise/">Cloudflare</a>是一家提供CDN、网络安全、DDos防御和域名服务的美国公司。全世界有20%的互联网流量都经过了Cloudflare的网络代理。基于Cloudflare Workers我们可以白嫖dockerhub、gcr、quay等镜像代理服务和Github下载加速服务。</p><p>总所周知，国外的docker镜像服务器很难访问很难访问，经常会发生Docker拉取镜像失败的问题，在国内使用都是通过配置镜像源来加速镜像拉取的操作，然而因为国内监管的问题，许多常用的国内镜像站（包括各种云服务商和高校镜像站）已经无法使用。</p><p>为了在国内正常拉取Docker镜像，非常建议自己搭建一个Docker镜像代理。</p><h2 id="访问Github仓库-Docker仓库镜像代理工具"><a href="#访问Github仓库-Docker仓库镜像代理工具" class="headerlink" title="访问Github仓库 Docker仓库镜像代理工具"></a>访问Github仓库 <a href="https://github.com/cmliu/CF-Workers-docker.io">Docker仓库镜像代理工具</a></h2><p>这个项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具。它能够中转对 Docker 官方镜像仓库的请求，解决一些访问限制和加速访问的问题。</p><h2 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h2><h3 id="Workers-部署"><a href="#Workers-部署" class="headerlink" title="Workers 部署"></a><strong>Workers</strong> 部署</h3><ul><li>在Cloudflare中找到并创建<strong>Workers</strong>项目</li></ul><p><img src="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/%E5%88%9B%E5%BB%BAworker.png"></p><ul><li>为Cloudflare Workers项目命名，建议是项目名称系统默认就可以了，因为不可描述的原因workers.dev域名在国内是无法访问的，所以我们需要自定义域名访问</li></ul><p><img src="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/%E4%B8%BA%E9%A1%B9%E7%9B%AE%E5%91%BD%E5%90%8D.png"></p><ul><li>点击编辑代码</li></ul><p><img src="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/%E7%82%B9%E5%87%BB%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81.png"></p><ul><li><p>复制项目中 <a href="https://github.com/cmliu/CF-Workers-docker.io/blob/main/_worker.js">worker.js</a> 文件内的代码粘贴到Worker项目中并点击部署</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br></pre></td><td class="code"><pre><span class="line">// _worker.js</span><br><span class="line"></span><br><span class="line">// Docker镜像仓库主机地址</span><br><span class="line">let hub_host = 'registry-1.docker.io';</span><br><span class="line">// Docker认证服务器地址</span><br><span class="line">const auth_url = 'https://auth.docker.io';</span><br><span class="line"></span><br><span class="line">let 屏蔽爬虫UA = ['netcraft'];</span><br><span class="line"></span><br><span class="line">// 根据主机名选择对应的上游地址</span><br><span class="line">function routeByHosts(host) {</span><br><span class="line">// 定义路由表</span><br><span class="line">const routes = {</span><br><span class="line">// 生产环境</span><br><span class="line">"quay": "quay.io",</span><br><span class="line">"gcr": "gcr.io",</span><br><span class="line">"k8s-gcr": "k8s.gcr.io",</span><br><span class="line">"k8s": "registry.k8s.io",</span><br><span class="line">"ghcr": "ghcr.io",</span><br><span class="line">"cloudsmith": "docker.cloudsmith.io",</span><br><span class="line">"nvcr": "nvcr.io",</span><br><span class="line"></span><br><span class="line">// 测试环境</span><br><span class="line">"test": "registry-1.docker.io",</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">if (host in routes) return [routes[host], false];</span><br><span class="line">else return [hub_host, true];</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/** @type {RequestInit} */</span><br><span class="line">const PREFLIGHT_INIT = {</span><br><span class="line">// 预检请求配置</span><br><span class="line">headers: new Headers({</span><br><span class="line">'access-control-allow-origin': '*', // 允许所有来源</span><br><span class="line">'access-control-allow-methods': 'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS', // 允许的HTTP方法</span><br><span class="line">'access-control-max-age': '1728000', // 预检请求的缓存时间</span><br><span class="line">}),</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 构造响应</span><br><span class="line"> * @param {any} body 响应体</span><br><span class="line"> * @param {number} status 响应状态码</span><br><span class="line"> * @param {Object&lt;string, string&gt;} headers 响应头</span><br><span class="line">   */</span><br><span class="line">   function makeRes(body, status = 200, headers = {}) {</span><br><span class="line">   headers['access-control-allow-origin'] = '*' // 允许所有来源</span><br><span class="line">   return new Response(body, { status, headers }) // 返回新构造的响应</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 构造新的URL对象</span><br><span class="line"> * @param {string} urlStr URL字符串</span><br><span class="line"> * @param {string} base URL base</span><br><span class="line">   */</span><br><span class="line">   function newUrl(urlStr, base) {</span><br><span class="line">   try {</span><br><span class="line">   console.log(`Constructing new URL object with path ${urlStr} and base ${base}`);</span><br><span class="line">   return new URL(urlStr, base); // 尝试构造新的URL对象</span><br><span class="line">   } catch (err) {</span><br><span class="line">   console.error(err);</span><br><span class="line">   return null // 构造失败返回null</span><br><span class="line">   }</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">async function nginx() {</span><br><span class="line">const text = `</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body {</span><br><span class="line">width: 35em;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">}</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href="http://nginx.org/"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href="http://nginx.com/"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">`</span><br><span class="line">return text;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">async function searchInterface() {</span><br><span class="line">const html = `</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Docker Hub 镜像搜索&lt;/title&gt;</span><br><span class="line">&lt;meta charset="UTF-8"&gt;</span><br><span class="line">&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">:root {</span><br><span class="line">--github-color: rgb(27,86,198);</span><br><span class="line">--github-bg-color: #ffffff;</span><br><span class="line">--primary-color: #0066ff;</span><br><span class="line">--primary-dark: #0052cc;</span><br><span class="line">--gradient-start: #1a90ff;</span><br><span class="line">--gradient-end: #003eb3;</span><br><span class="line">--text-color: #ffffff;</span><br><span class="line">--shadow-color: rgba(0,0,0,0.1);</span><br><span class="line">--transition-time: 0.3s;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* {</span><br><span class="line">box-sizing: border-box;</span><br><span class="line">margin: 0;</span><br><span class="line">padding: 0;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">body {</span><br><span class="line">font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">justify-content: center;</span><br><span class="line">align-items: center;</span><br><span class="line">min-height: 100vh;</span><br><span class="line">margin: 0;</span><br><span class="line">background: linear-gradient(135deg, var(--gradient-start) 0%, var(--gradient-end) 100%);</span><br><span class="line">padding: 20px;</span><br><span class="line">color: var(--text-color);</span><br><span class="line">overflow-x: hidden;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.container {</span><br><span class="line">text-align: center;</span><br><span class="line">width: 100%;</span><br><span class="line">max-width: 800px;</span><br><span class="line">padding: 20px;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">justify-content: center;</span><br><span class="line">min-height: 60vh;</span><br><span class="line">animation: fadeIn 0.8s ease-out;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@keyframes fadeIn {</span><br><span class="line">from { opacity: 0; transform: translateY(20px); }</span><br><span class="line">to { opacity: 1; transform: translateY(0); }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.github-corner {</span><br><span class="line">position: fixed;</span><br><span class="line">top: 0;</span><br><span class="line">right: 0;</span><br><span class="line">z-index: 999;</span><br><span class="line">transition: transform var(--transition-time) ease;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.github-corner:hover {</span><br><span class="line">transform: scale(1.08);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.github-corner svg {</span><br><span class="line">fill: var(--github-bg-color);</span><br><span class="line">color: var(--github-color);</span><br><span class="line">position: absolute;</span><br><span class="line">top: 0;</span><br><span class="line">border: 0;</span><br><span class="line">right: 0;</span><br><span class="line">width: 80px;</span><br><span class="line">height: 80px;</span><br><span class="line">filter: drop-shadow(0 2px 5px rgba(0, 0, 0, 0.2));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.logo {</span><br><span class="line">margin-bottom: 20px;</span><br><span class="line">transition: transform var(--transition-time) ease;</span><br><span class="line">animation: float 6s ease-in-out infinite;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@keyframes float {</span><br><span class="line">0%, 100% { transform: translateY(0); }</span><br><span class="line">50% { transform: translateY(-10px); }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.logo:hover {</span><br><span class="line">transform: scale(1.08) rotate(5deg);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.logo svg {</span><br><span class="line">filter: drop-shadow(0 5px 15px rgba(0, 0, 0, 0.2));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.title {</span><br><span class="line">color: var(--text-color);</span><br><span class="line">font-size: 2.3em;</span><br><span class="line">margin-bottom: 10px;</span><br><span class="line">text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);</span><br><span class="line">font-weight: 700;</span><br><span class="line">letter-spacing: -0.5px;</span><br><span class="line">animation: slideInFromTop 0.5s ease-out 0.2s both;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@keyframes slideInFromTop {</span><br><span class="line">from { opacity: 0; transform: translateY(-20px); }</span><br><span class="line">to { opacity: 1; transform: translateY(0); }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.subtitle {</span><br><span class="line">color: rgba(255, 255, 255, 0.9);</span><br><span class="line">font-size: 1.1em;</span><br><span class="line">margin-bottom: 25px;</span><br><span class="line">max-width: 600px;</span><br><span class="line">margin-left: auto;</span><br><span class="line">margin-right: auto;</span><br><span class="line">line-height: 1.4;</span><br><span class="line">animation: slideInFromTop 0.5s ease-out 0.4s both;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.search-container {</span><br><span class="line">display: flex;</span><br><span class="line">align-items: stretch;</span><br><span class="line">width: 100%;</span><br><span class="line">max-width: 600px;</span><br><span class="line">margin: 0 auto;</span><br><span class="line">height: 55px;</span><br><span class="line">position: relative;</span><br><span class="line">animation: slideInFromBottom 0.5s ease-out 0.6s both;</span><br><span class="line">box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);</span><br><span class="line">border-radius: 12px;</span><br><span class="line">overflow: hidden;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@keyframes slideInFromBottom {</span><br><span class="line">from { opacity: 0; transform: translateY(20px); }</span><br><span class="line">to { opacity: 1; transform: translateY(0); }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-input {</span><br><span class="line">flex: 1;</span><br><span class="line">padding: 0 20px;</span><br><span class="line">font-size: 16px;</span><br><span class="line">border: none;</span><br><span class="line">outline: none;</span><br><span class="line">transition: all var(--transition-time) ease;</span><br><span class="line">height: 100%;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-input:focus {</span><br><span class="line">padding-left: 25px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button {</span><br><span class="line">width: 60px;</span><br><span class="line">background-color: var(--primary-color);</span><br><span class="line">border: none;</span><br><span class="line">cursor: pointer;</span><br><span class="line">transition: all var(--transition-time) ease;</span><br><span class="line">height: 100%;</span><br><span class="line">display: flex;</span><br><span class="line">align-items: center;</span><br><span class="line">justify-content: center;</span><br><span class="line">position: relative;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button svg {</span><br><span class="line">transition: transform 0.3s ease;</span><br><span class="line">stroke: white;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button:hover {</span><br><span class="line">background-color: var(--primary-dark);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button:hover svg {</span><br><span class="line">transform: translateX(2px);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button:active svg {</span><br><span class="line">transform: translateX(4px);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.tips {</span><br><span class="line">color: rgba(255, 255, 255, 0.8);</span><br><span class="line">margin-top: 20px;</span><br><span class="line">font-size: 0.9em;</span><br><span class="line">animation: fadeIn 0.5s ease-out 0.8s both;</span><br><span class="line">transition: transform var(--transition-time) ease;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.tips:hover {</span><br><span class="line">transform: translateY(-2px);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@media (max-width: 768px) {</span><br><span class="line">.container {</span><br><span class="line">padding: 20px 15px;</span><br><span class="line">min-height: 60vh;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.title {</span><br><span class="line">font-size: 2em;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.subtitle {</span><br><span class="line">font-size: 1em;</span><br><span class="line">margin-bottom: 20px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.search-container {</span><br><span class="line">height: 50px;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@media (max-width: 480px) {</span><br><span class="line">.container {</span><br><span class="line">padding: 15px 10px;</span><br><span class="line">min-height: 60vh;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.github-corner svg {</span><br><span class="line">width: 60px;</span><br><span class="line">height: 60px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.search-container {</span><br><span class="line">height: 45px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-input {</span><br><span class="line">padding: 0 15px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button {</span><br><span class="line">width: 50px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">#search-button svg {</span><br><span class="line">width: 18px;</span><br><span class="line">height: 18px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.title {</span><br><span class="line">font-size: 1.7em;</span><br><span class="line">margin-bottom: 8px;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">.subtitle {</span><br><span class="line">font-size: 0.95em;</span><br><span class="line">margin-bottom: 18px;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href="https://github.com/cmliu/CF-Workers-docker.io" target="_blank" class="github-corner" aria-label="View source on Github"&gt;</span><br><span class="line">&lt;svg viewBox="0 0 250 250" aria-hidden="true"&gt;</span><br><span class="line">&lt;path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"&gt;&lt;/path&gt;</span><br><span class="line">&lt;path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"&gt;&lt;/path&gt;</span><br><span class="line">&lt;path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"&gt;&lt;/path&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;div class="container"&gt;</span><br><span class="line">&lt;div class="logo"&gt;</span><br><span class="line">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 18" fill="#ffffff" width="110" height="85"&gt;</span><br><span class="line">&lt;path d="M23.763 6.886c-.065-.053-.673-.512-1.954-.512-.32 0-.659.03-1.01.087-.248-1.703-1.651-2.533-1.716-2.57l-.345-.2-.227.328a4.596 4.596 0 0 0-.611 1.433c-.23.972-.09 1.884.403 2.666-.596.331-1.546.418-1.744.42H.752a.753.753 0 0 0-.75.749c-.007 1.456.233 2.864.692 4.07.545 1.43 1.355 2.483 2.409 3.13 1.181.725 3.104 1.14 5.276 1.14 1.016 0 2.03-.092 2.93-.266 1.417-.273 2.705-.742 3.826-1.391a10.497 10.497 0 0 0 2.61-2.14c1.252-1.42 1.998-3.005 2.553-4.408.075.003.148.005.221.005 1.371 0 2.215-.55 2.68-1.01.505-.5.685-.998.704-1.053L24 7.076l-.237-.19Z"&gt;&lt;/path&gt;</span><br><span class="line">&lt;path d="M2.216 8.075h2.119a.186.186 0 0 0 .185-.186V6a.186.186 0 0 0-.185-.186H2.216A.186.186 0 0 0 2.031 6v1.89c0 .103.083.186.185.186Zm2.92 0h2.118a.185.185 0 0 0 .185-.186V6a.185.185 0 0 0-.185-.186H5.136A.185.185 0 0 0 4.95 6v1.89c0 .103.083.186.186.186Zm2.964 0h2.118a.186.186 0 0 0 .185-.186V6a.186.186 0 0 0-.185-.186H8.1A.185.185 0 0 0 7.914 6v1.89c0 .103.083.186.186.186Zm2.928 0h2.119a.185.185 0 0 0 .185-.186V6a.185.185 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm-5.892-2.72h2.118a.185.185 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186H5.136a.186.186 0 0 0-.186.186v1.89c0 .103.083.186.186.186Zm2.964 0h2.118a.186.186 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186H8.1a.186.186 0 0 0-.186.186v1.89c0 .103.083.186.186.186Zm2.928 0h2.119a.185.185 0 0 0 .185-.186V3.28a.186.186 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm0-2.72h2.119a.186.186 0 0 0 .185-.186V.56a.185.185 0 0 0-.185-.186h-2.119a.186.186 0 0 0-.185.186v1.89c0 .103.083.186.185.186Zm2.955 5.44h2.118a.185.185 0 0 0 .186-.186V6a.185.185 0 0 0-.186-.186h-2.118a.185.185 0 0 0-.185.186v1.89c0 .103.083.186.185.186Z"&gt;&lt;/path&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;h1 class="title"&gt;Docker Hub 镜像搜索&lt;/h1&gt;</span><br><span class="line">&lt;p class="subtitle"&gt;快速查找、下载和部署 Docker 容器镜像&lt;/p&gt;</span><br><span class="line">&lt;div class="search-container"&gt;</span><br><span class="line">&lt;input type="text" id="search-input" placeholder="输入关键词搜索镜像，如: nginx, mysql, redis..."&gt;</span><br><span class="line">&lt;button id="search-button" title="搜索"&gt;</span><br><span class="line">&lt;svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"&gt;</span><br><span class="line">&lt;path d="M13 5l7 7-7 7M5 5l7 7-7 7" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p class="tips"&gt;基于 Cloudflare Workers / Pages 构建，利用全球边缘网络实现毫秒级响应。&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">function performSearch() {</span><br><span class="line">const query = document.getElementById('search-input').value;</span><br><span class="line">if (query) {</span><br><span class="line">window.location.href = '/search?q=' + encodeURIComponent(query);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">document.getElementById('search-button').addEventListener('click', performSearch);</span><br><span class="line">document.getElementById('search-input').addEventListener('keypress', function(event) {</span><br><span class="line">if (event.key === 'Enter') {</span><br><span class="line">performSearch();</span><br><span class="line">}</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">// 添加焦点在搜索框</span><br><span class="line">window.addEventListener('load', function() {</span><br><span class="line">document.getElementById('search-input').focus();</span><br><span class="line">});</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">`;</span><br><span class="line">return html;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">export default {</span><br><span class="line">async fetch(request, env, ctx) {</span><br><span class="line">const getReqHeader = (key) =&gt; request.headers.get(key); // 获取请求头</span><br><span class="line"></span><br><span class="line">let url = new URL(request.url); // 解析请求URL</span><br><span class="line">const userAgentHeader = request.headers.get('User-Agent');</span><br><span class="line">const userAgent = userAgentHeader ? userAgentHeader.toLowerCase() : "null";</span><br><span class="line">if (env.UA) 屏蔽爬虫UA = 屏蔽爬虫UA.concat(await ADD(env.UA));</span><br><span class="line">const workers_url = `https://${url.hostname}`;</span><br><span class="line"></span><br><span class="line">// 获取请求参数中的 ns</span><br><span class="line">const ns = url.searchParams.get('ns');</span><br><span class="line">const hostname = url.searchParams.get('hubhost') || url.hostname;</span><br><span class="line">const hostTop = hostname.split('.')[0]; // 获取主机名的第一部分</span><br><span class="line"></span><br><span class="line">let checkHost; // 在这里定义 checkHost 变量</span><br><span class="line">// 如果存在 ns 参数，优先使用它来确定 hub_host</span><br><span class="line">if (ns) {</span><br><span class="line">if (ns === 'docker.io') {</span><br><span class="line">hub_host = 'registry-1.docker.io'; // 设置上游地址为 registry-1.docker.io</span><br><span class="line">} else {</span><br><span class="line">hub_host = ns; // 直接使用 ns 作为 hub_host</span><br><span class="line">}</span><br><span class="line">} else {</span><br><span class="line">checkHost = routeByHosts(hostTop);</span><br><span class="line">hub_host = checkHost[0]; // 获取上游地址</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">const fakePage = checkHost ? checkHost[1] : false; // 确保 fakePage 不为 undefined</span><br><span class="line">console.log(`域名头部: ${hostTop} 反代地址: ${hub_host} searchInterface: ${fakePage}`);</span><br><span class="line">// 更改请求的主机名</span><br><span class="line">url.hostname = hub_host;</span><br><span class="line">const hubParams = ['/v1/search', '/v1/repositories'];</span><br><span class="line">if (屏蔽爬虫UA.some(fxxk =&gt; userAgent.includes(fxxk)) &amp;&amp; 屏蔽爬虫UA.length &gt; 0) {</span><br><span class="line">// 首页改成一个nginx伪装页</span><br><span class="line">return new Response(await nginx(), {</span><br><span class="line">headers: {</span><br><span class="line">'Content-Type': 'text/html; charset=UTF-8',</span><br><span class="line">},</span><br><span class="line">});</span><br><span class="line">} else if ((userAgent &amp;&amp; userAgent.includes('mozilla')) || hubParams.some(param =&gt; url.pathname.includes(param))) {</span><br><span class="line">if (url.pathname == '/') {</span><br><span class="line">if (env.URL302) {</span><br><span class="line">return Response.redirect(env.URL302, 302);</span><br><span class="line">} else if (env.URL) {</span><br><span class="line">if (env.URL.toLowerCase() == 'nginx') {</span><br><span class="line">//首页改成一个nginx伪装页</span><br><span class="line">return new Response(await nginx(), {</span><br><span class="line">headers: {</span><br><span class="line">'Content-Type': 'text/html; charset=UTF-8',</span><br><span class="line">},</span><br><span class="line">});</span><br><span class="line">} else return fetch(new Request(env.URL, request));</span><br><span class="line">} else{</span><br><span class="line">if (fakePage) return new Response(await searchInterface(), {</span><br><span class="line">headers: {</span><br><span class="line">'Content-Type': 'text/html; charset=UTF-8',</span><br><span class="line">},</span><br><span class="line">});</span><br><span class="line">}</span><br><span class="line">} else {</span><br><span class="line">if (fakePage) url.hostname = 'hub.docker.com';</span><br><span class="line">if (url.searchParams.get('q')?.includes('library/') &amp;&amp; url.searchParams.get('q') != 'library/') {</span><br><span class="line">const search = url.searchParams.get('q');</span><br><span class="line">url.searchParams.set('q', search.replace('library/', ''));</span><br><span class="line">}</span><br><span class="line">const newRequest = new Request(url, request);</span><br><span class="line">return fetch(newRequest);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 修改包含 %2F 和 %3A 的请求</span><br><span class="line">if (!/%2F/.test(url.search) &amp;&amp; /%3A/.test(url.toString())) {</span><br><span class="line">let modifiedUrl = url.toString().replace(/%3A(?=.*?&amp;)/, '%3Alibrary%2F');</span><br><span class="line">url = new URL(modifiedUrl);</span><br><span class="line">console.log(`handle_url: ${url}`);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 处理token请求</span><br><span class="line">if (url.pathname.includes('/token')) {</span><br><span class="line">let token_parameter = {</span><br><span class="line">headers: {</span><br><span class="line">'Host': 'auth.docker.io',</span><br><span class="line">'User-Agent': getReqHeader("User-Agent"),</span><br><span class="line">'Accept': getReqHeader("Accept"),</span><br><span class="line">'Accept-Language': getReqHeader("Accept-Language"),</span><br><span class="line">'Accept-Encoding': getReqHeader("Accept-Encoding"),</span><br><span class="line">'Connection': 'keep-alive',</span><br><span class="line">'Cache-Control': 'max-age=0'</span><br><span class="line">}</span><br><span class="line">};</span><br><span class="line">let token_url = auth_url + url.pathname + url.search;</span><br><span class="line">return fetch(new Request(token_url, request), token_parameter);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 修改 /v2/ 请求路径</span><br><span class="line">if (hub_host == 'registry-1.docker.io' &amp;&amp; /^\/v2\/[^/]+\/[^/]+\/[^/]+$/.test(url.pathname) &amp;&amp; !/^\/v2\/library/.test(url.pathname)) {</span><br><span class="line">//url.pathname = url.pathname.replace(/\/v2\//, '/v2/library/');</span><br><span class="line">url.pathname = '/v2/library/' + url.pathname.split('/v2/')[1];</span><br><span class="line">console.log(`modified_url: ${url.pathname}`);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 构造请求参数</span><br><span class="line">let parameter = {</span><br><span class="line">headers: {</span><br><span class="line">'Host': hub_host,</span><br><span class="line">'User-Agent': getReqHeader("User-Agent"),</span><br><span class="line">'Accept': getReqHeader("Accept"),</span><br><span class="line">'Accept-Language': getReqHeader("Accept-Language"),</span><br><span class="line">'Accept-Encoding': getReqHeader("Accept-Encoding"),</span><br><span class="line">'Connection': 'keep-alive',</span><br><span class="line">'Cache-Control': 'max-age=0'</span><br><span class="line">},</span><br><span class="line">cacheTtl: 3600 // 缓存时间</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">// 添加Authorization头</span><br><span class="line">if (request.headers.has("Authorization")) {</span><br><span class="line">parameter.headers.Authorization = getReqHeader("Authorization");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 添加可能存在字段X-Amz-Content-Sha256</span><br><span class="line">if (request.headers.has("X-Amz-Content-Sha256")) {</span><br><span class="line">parameter.headers['X-Amz-Content-Sha256'] = getReqHeader("X-Amz-Content-Sha256");</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 发起请求并处理响应</span><br><span class="line">let original_response = await fetch(new Request(url, request), parameter);</span><br><span class="line">let original_response_clone = original_response.clone();</span><br><span class="line">let original_text = original_response_clone.body;</span><br><span class="line">let response_headers = original_response.headers;</span><br><span class="line">let new_response_headers = new Headers(response_headers);</span><br><span class="line">let status = original_response.status;</span><br><span class="line"></span><br><span class="line">// 修改 Www-Authenticate 头</span><br><span class="line">if (new_response_headers.get("Www-Authenticate")) {</span><br><span class="line">let auth = new_response_headers.get("Www-Authenticate");</span><br><span class="line">let re = new RegExp(auth_url, 'g');</span><br><span class="line">new_response_headers.set("Www-Authenticate", response_headers.get("Www-Authenticate").replace(re, workers_url));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 处理重定向</span><br><span class="line">if (new_response_headers.get("Location")) {</span><br><span class="line">const location = new_response_headers.get("Location");</span><br><span class="line">console.info(`Found redirection location, redirecting to ${location}`);</span><br><span class="line">return httpHandler(request, location, hub_host);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">// 返回修改后的响应</span><br><span class="line">let response = new Response(original_text, {</span><br><span class="line">status,</span><br><span class="line">headers: new_response_headers</span><br><span class="line">});</span><br><span class="line">return response;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 处理HTTP请求</span><br><span class="line"></span><br><span class="line"> * @param {Request} req 请求对象</span><br><span class="line"></span><br><span class="line"> * @param {string} pathname 请求路径</span><br><span class="line"></span><br><span class="line"> * @param {string} baseHost 基地址</span><br><span class="line">   */</span><br><span class="line">   function httpHandler(req, pathname, baseHost) {</span><br><span class="line">   const reqHdrRaw = req.headers;</span><br><span class="line"></span><br><span class="line">   // 处理预检请求</span><br><span class="line">   if (req.method === 'OPTIONS' &amp;&amp;</span><br><span class="line">   reqHdrRaw.has('access-control-request-headers')</span><br><span class="line">   ) {</span><br><span class="line">   return new Response(null, PREFLIGHT_INIT);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   let rawLen = '';</span><br><span class="line"></span><br><span class="line">   const reqHdrNew = new Headers(reqHdrRaw);</span><br><span class="line"></span><br><span class="line">   reqHdrNew.delete("Authorization"); // 修复s3错误</span><br><span class="line"></span><br><span class="line">   const refer = reqHdrNew.get('referer');</span><br><span class="line"></span><br><span class="line">   let urlStr = pathname;</span><br><span class="line"></span><br><span class="line">   const urlObj = newUrl(urlStr, 'https://' + baseHost);</span><br><span class="line"></span><br><span class="line">   /** @type {RequestInit} */</span><br><span class="line">   const reqInit = {</span><br><span class="line">   method: req.method,</span><br><span class="line">   headers: reqHdrNew,</span><br><span class="line">   redirect: 'follow',</span><br><span class="line">   body: req.body</span><br><span class="line">   };</span><br><span class="line">   return proxy(urlObj, reqInit, rawLen);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 代理请求</span><br><span class="line"></span><br><span class="line"> * @param {URL} urlObj URL对象</span><br><span class="line"></span><br><span class="line"> * @param {RequestInit} reqInit 请求初始化对象</span><br><span class="line"></span><br><span class="line"> * @param {string} rawLen 原始长度</span><br><span class="line">   */</span><br><span class="line">   async function proxy(urlObj, reqInit, rawLen) {</span><br><span class="line">   const res = await fetch(urlObj.href, reqInit);</span><br><span class="line">   const resHdrOld = res.headers;</span><br><span class="line">   const resHdrNew = new Headers(resHdrOld);</span><br><span class="line"></span><br><span class="line">   // 验证长度</span><br><span class="line">   if (rawLen) {</span><br><span class="line">   const newLen = resHdrOld.get('content-length') || '';</span><br><span class="line">   const badLen = (rawLen !== newLen);</span><br><span class="line"></span><br><span class="line">   if (badLen) {</span><br><span class="line">   return makeRes(res.body, 400, {</span><br><span class="line">   '--error': `bad len: ${newLen}, except: ${rawLen}`,</span><br><span class="line">   'access-control-expose-headers': '--error',</span><br><span class="line">   });</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   }</span><br><span class="line">   const status = res.status;</span><br><span class="line">   resHdrNew.set('access-control-expose-headers', '*');</span><br><span class="line">   resHdrNew.set('access-control-allow-origin', '*');</span><br><span class="line">   resHdrNew.set('Cache-Control', 'max-age=1500');</span><br><span class="line"></span><br><span class="line">   // 删除不必要的头</span><br><span class="line">   resHdrNew.delete('content-security-policy');</span><br><span class="line">   resHdrNew.delete('content-security-policy-report-only');</span><br><span class="line">   resHdrNew.delete('clear-site-data');</span><br><span class="line"></span><br><span class="line">   return new Response(res.body, {</span><br><span class="line">   status,</span><br><span class="line">   headers: resHdrNew</span><br><span class="line">   });</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">async function ADD(envadd) {</span><br><span class="line">var addtext = envadd.replace(/[ |"'\r\n]+/g, ',').replace(/,+/g, ',');// 将空格、双引号、单引号和换行符替换为逗号</span><br><span class="line">if (addtext.charAt(0) == ',') addtext = addtext.slice(1);</span><br><span class="line">if (addtext.charAt(addtext.length - 1) == ',') addtext = addtext.slice(0, addtext.length - 1);</span><br><span class="line">const add = addtext.split(',');</span><br><span class="line">return add;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><p><img src="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.jpg"></p><h3 id="workers自定义域名"><a href="#workers自定义域名" class="headerlink" title="workers自定义域名"></a>workers自定义域名</h3><p>因为不可描述的原因，访问<strong>workers.dev</strong>域名可能会遇到一些障碍。为了解决这个问题，我们需要在Workers项目内通过自定义域名访问或Workers路由。</p><p>这里只对自定义域名进行演示，Workers路由涉及到<strong>CF优选</strong>会在下一篇文章中进行演示</p><p>在该Workers项目中设置中找到域和路由，点击添加选择自定义域，输入自定义域名后点击添加域，Cloudflare会自动帮你添加DNS记录</p><p><img src="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D.png"></p><p>恭喜你，现在就可以通过自定义域名访问了，会出现下方画面</p><p>![](<a href="https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/Docker">https://gh.zsir.us.kg/https://raw.githubusercontent.com/gracelsy/picx-images-hosting/master/Docker</a> Woekers演示.png)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cloudflare-cn.com/enterprise/&quot;&gt;Cloudflare&lt;/a&gt;是一家提供CDN、网络安全、DDos防御和域名服务的美国公司。全世界有20%的互联网流量都经过了Cloudflare的网络代理。基于</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="Debian" scheme="http://example.com/categories/Linux/Debian/"/>
    
    <category term="Ubuntu" scheme="http://example.com/categories/Linux/Debian/Ubuntu/"/>
    
    <category term="Docker" scheme="http://example.com/categories/Linux/Debian/Ubuntu/Docker/"/>
    
    
    <category term="Openwrt" scheme="http://example.com/tags/Openwrt/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="CloudFlare" scheme="http://example.com/tags/CloudFlare/"/>
    
  </entry>
  
  <entry>
    <title>EasyTier异地组网教程</title>
    <link href="http://example.com/posts/efb26950.html"/>
    <id>http://example.com/posts/efb26950.html</id>
    <published>2025-04-23T07:05:26.000Z</published>
    <updated>2025-05-21T06:47:03.810Z</updated>
    
    <content type="html"><![CDATA[<hr><p>异地组网简单来说，就是把两个或多个不在同一地方的小网络（比如家里和公司），通过互联网或专用线路连接成一个大网络。这样不同地方的电脑、打印机、服务器等设备就能互相访问，就像在同一个办公室一样方便。当下最常用的异地组网工具有<strong>zerotier</strong>、<strong>Tailscale</strong>、<strong>wireguard</strong>，当然还有其他组网工具。 <strong><a href="https://easytier.cn/">EasyTier</a></strong> 是大佬 <strong>@雨过。天晴</strong> 开源的内网穿透远程组网方案。EasyTier最主要的特点就是去中心化，客户端也是DERP 中继服务器（当你通过命令或配置文件开放相应的端口启动后，EasyTier就是服务端）。</p><h3 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian/Ubuntu"></a>Debian/Ubuntu</h3><h4 id="安装EasyTier"><a href="#安装EasyTier" class="headerlink" title="安装EasyTier"></a>安装EasyTier</h4><p>访问 <a href="https://github.com/EasyTier/EasyTier/releases/"><strong>⬇️下载页面</strong></a> 下载适用于您操作系统的二进制文件或安装包。</p><p>注：请下载最新的二进制文件或安装包不要复制粘贴</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新软件源并安装wget、unzip</span></span><br><span class="line">apt-get update&amp;&amp;apt install wget unzip -y</span><br><span class="line"><span class="comment"># 在/etc文件夹中创建easytier，并切换至/etc/easytier</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/easytier &amp;&amp; <span class="built_in">cd</span> /etc/easytier</span><br><span class="line"><span class="comment"># 请下载最新的安装包（Debian/Ubuntu/x86_64）,国内GitHub网络环境不好，自行解决下载慢或下载失败问题</span></span><br><span class="line">wget https://github.com/EasyTier/EasyTier/releases/download/v2.2.4/easytier-linux-x86_64-v2.2.4.zip</span><br><span class="line"><span class="comment"># 解压下载的安装包</span></span><br><span class="line">unzip easytier-linux-x86_64-v2.2.4.zip &amp;&amp; <span class="built_in">cp</span> easytier-linux-x86_64/* ./&amp;&amp;<span class="built_in">chmod</span> 700 ./*</span><br><span class="line"><span class="comment"># 删除多余文件</span></span><br><span class="line"><span class="built_in">rm</span> -f ./easytier-linux-x86_64-v2.2.4.zip &amp;&amp; <span class="built_in">rm</span> -rf ./easytier-linux-x86_64</span><br></pre></td></tr></tbody></table></figure><h4 id="启动EasyTier"><a href="#启动EasyTier" class="headerlink" title="启动EasyTier"></a>启动EasyTier</h4><p>EasyTier有三种启动方式，分别是命令行、配置文件、WEB配置。</p><h5 id="命令行启动"><a href="#命令行启动" class="headerlink" title="命令行启动"></a>命令行启动</h5><p>具体的参数请参考<a href="https://easytier.cn/guide/network/configurations.html"><strong>官方文档</strong></a>和<a href="https://doc.oee.icu:60009/web/#/625560517/103293299"><strong>社区文档</strong></a>的参数说明</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> easytier-core -i 10.144.144.1 --network-name abc --network-secret 123 -p tcp://public.easytier.cn:11010</span><br></pre></td></tr></tbody></table></figure><ul><li><font size="2"><strong>-i 10.144.144.1/24</strong> 代表指定当前主机的虚拟 IP 地址为10.144.144.1，子网掩码为255.255.255.0，其他客户端的虚拟 IP 地址必须在其虚拟局域网为10.144.144.0/24中，虚拟局域网不能于客户端局域网冲突，可设置虚拟局域网IPv4参考 - <a href="https://www.w3ccoo.com/ipv4/ipv4_reserved_addresses.html"><strong>保留地址</strong></a>；</font></li><li><font size="2">-<strong>-network-name abc</strong> 和 <strong>–network-secret 123</strong> 代表网络名abc和网络密钥123，相当于进入该虚拟局域网中的账号和密码；</font></li><li><font size="2"><strong>-p tcp://public.easytier.cn:11010</strong> 代表指定节点地址，tcp://public.easytier.cn:11010 官方的共享节点，也可使用EasyTier可爱群友提供的服务器和自建服务器。</font></li></ul><p><font size="2"><strong>注：</strong> 自建服务器需要用公网ip地址，客户端通过命令开放相应的TCP/UDP端口即可变为服务器，可参考官方文档<a href="https://easytier.cn/guide/network/decentralized-networking.html">去中心组网</a>。</font></p><h5 id="WEB配置"><a href="#WEB配置" class="headerlink" title="WEB配置"></a><strong>WEB配置</strong></h5><h5 id="配置文件启动"><a href="#配置文件启动" class="headerlink" title="配置文件启动"></a><strong>配置文件启动</strong></h5><p>配置文件可以使用 <strong><a href="https://easytier.cn/web/index.html#/config_generator">官方配置文件生成工具</a></strong> 和<a href="https://doc.oee.icu:60009/et#/"><strong>社区配置文件生成工具</strong></a>生成。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建配置文件</span></span><br><span class="line">nano /etc/easytier/config.yaml</span><br></pre></td></tr></tbody></table></figure><p>然后将生成的配置文件粘贴到config.yaml中，Ctrl+x 输入y保存</p><p><img src="https://img.zsir.us.kg/api/cfile/AgACAgUAAyEGAASJb2nwAAMeaCfkMuiEQ1cjv4fGV29BwafrmosAAk_QMRsuSThVCr_PVreLoZUBAAMCAAN3AAM2BA" alt="中国风-山水.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;异地组网简单来说，就是把两个或多个不在同一地方的小网络（比如家里和公司），通过互联网或专用线路连接成一个大网络。这样不同地方的电脑、打印机、服务器等设备就能互相访问，就像在同一个办公室一样方便。当下最常用的异地组网工具有&lt;strong&gt;zerotier&lt;/stro</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    <category term="Debian" scheme="http://example.com/categories/Linux/Debian/"/>
    
    <category term="Ubuntu" scheme="http://example.com/categories/Linux/Debian/Ubuntu/"/>
    
    
    <category term="EasyTier" scheme="http://example.com/tags/EasyTier/"/>
    
    <category term="Openwrt" scheme="http://example.com/tags/Openwrt/"/>
    
    <category term="Docker" scheme="http://example.com/tags/Docker/"/>
    
    <category term="异地组网" scheme="http://example.com/tags/%E5%BC%82%E5%9C%B0%E7%BB%84%E7%BD%91/"/>
    
  </entry>
  
</feed>
